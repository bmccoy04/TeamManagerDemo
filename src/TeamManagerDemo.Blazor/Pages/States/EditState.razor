@page "/edit-state/{id:int}"

@using Microsoft.EntityFrameworkCore
@using TeamManagerDemo.Infrastructure.Data
@using TeamManagerDemo.Core.Entities

@inject NavigationManager navigationManager
@inject AppDbContext appDbContext

<section>
    <h3>
        Edit the State.
    </h3>
    <EditForm Model="@State" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group row">
            <label for="name" class="col-sm-3">
                Name:
            </label>
            <InputText 
                id="name" 
                @bind-Value="@State.Name" 
                class="form-control col-sm-8" 
                placeholder="State Name">
            </InputText>
            <ValidationMessage 
                class="offset-sm-3 col-sm-8"
                For="@(() => State.Name)">
            </ValidationMessage>

        </div>
        <button type="submit" class="btn btn-primary edit-btn">Save</button>
        <NavLink href="states" class="btn btn-default edit-btn">
            Cancel 
        </NavLink>
    </EditForm>
</section>

@code {
    private State State {get; set;} = new State();    
    
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        State = await appDbContext.Set<State>().FirstOrDefaultAsync(s => s.Id == Id);
        
        if(State == null)
            navigationManager.NavigateTo("add-state");
    }

    private async Task HandleValidSubmit()     
    {
        State.ModifyDate = DateTime.Now;
        appDbContext.Update(this.State);
        await appDbContext.SaveChangesAsync();
        navigationManager.NavigateTo("states");
    }

}
